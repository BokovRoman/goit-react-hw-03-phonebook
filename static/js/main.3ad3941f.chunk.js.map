{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/ContactForm/ContactForm.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContact","className","styles","list","map","id","name","number","item","button","type","onClick","Filter","value","onChange","label","input","Section","title","children","container","text","protoTypes","PropTypes","string","isRequired","INITIAL_STATE","ContactForm","state","handleChange","target","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","form","pattern","required","Component","App","filter","addContact","newContact","shortid","generate","includesContact","find","contact","alert","changeFilter","currentTarget","visibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,wB,kBCAzBD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,qLC6BhFC,EAzBK,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,gBAC5B,OACI,oBAAIC,UAAWC,IAAOC,KAAtB,SACKJ,EAASK,KAAI,gBAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,KAAKC,EAAV,EAAUA,OAAV,OACN,qBAAaN,UAAWC,IAAOM,KAA/B,UACA,8BAAIF,EAAJ,KAAYC,KACZ,wBAAQN,UAAWC,IAAOO,OAAQC,KAAK,SACvCC,QAAS,kBAAMX,EAAgBK,IAD/B,sBAFSA,S,iBCadO,EAjBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACX,wBAAOb,UAAWC,IAAOa,MAAzB,kCAEA,uBACId,UAAWC,IAAOc,MACpBN,KAAK,OACLG,MAAOA,EACPC,SAAUA,Q,kCCPVG,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,sBAAKlB,UAAWC,IAAOkB,UAAvB,UACI,oBAAInB,UAAWC,IAAOmB,KAAtB,SAA6BH,IAE5BC,MAKbF,EAAQK,WAAa,CACjBJ,MAAMK,IAAUC,OAAOC,YAGZR,Q,+BChBTS,EAAgB,CACpBpB,KAAM,GACNC,OAAQ,IAiEKoB,E,4MA7DbC,M,eACKF,G,EAGLG,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRxB,EAAgBwB,EAAhBxB,KAAMO,EAAUiB,EAAVjB,MACd,EAAKkB,SAAL,eAAiBzB,EAAOO,K,EAG1BmB,aAAe,SAACC,GACdA,EAAEC,iBACF,MAAyB,EAAKN,MAAtBtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,EAAK4B,MAAMC,SAAS9B,EAAMC,GAC1B,EAAK8B,S,EAGPA,MAAQ,WACN,EAAKN,SAAL,eAAmBL,K,4CAGrB,WACE,MAAyBY,KAAKV,MAAtBtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACI,uBAAMN,UAAWC,IAAOqC,KAAMH,SAAUE,KAAKN,aAA7C,UACI,wBAAO/B,UAAWC,IAAOa,MAAzB,iBAEF,uBACEd,UAAWC,IAAOc,MAClBN,KAAK,OACLJ,KAAK,OACLkC,QAAQ,yHACRtB,MAAM,kcACNuB,UAAQ,EACR5B,MAAOP,EACPQ,SAAUwB,KAAKT,kBAGnB,wBAAO5B,UAAWC,IAAOa,MAAzB,mBAEE,uBACEd,UAAWC,IAAOc,MAClBN,KAAK,MACLJ,KAAK,SACLkC,QAAQ,yFACRtB,MAAM,giBACNuB,UAAQ,EACR5B,MAAON,EACPO,SAAUwB,KAAKT,kBAGnB,wBAAQ5B,UAAWC,IAAOO,OAAQC,KAAK,SAAvC,gC,GApDkBgC,aCqFXC,E,4MAnFbf,MAAQ,CACN7B,SAAU,CACR,CAAEM,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDqC,OAAQ,I,EAGVC,WAAa,SAACvC,EAAMC,GAClB,IAAMuC,EAAa,CACjBzC,GAAI0C,IAAQC,WACZ1C,OACAC,UAGI0C,EADe,EAAKrB,MAAlB7B,SACyBmD,MAC/B,SAACC,GAAD,OAAaA,EAAQ7C,OAASwC,EAAWxC,QAG3C2C,EACIG,MAAM,GAAD,OAAIH,EAAgB3C,KAApB,4BACL,EAAKyB,UAAS,gBAAGhC,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,CAAe+C,S,EAI/BO,aAAe,SAACpB,GACd,EAAKF,SAAS,CAAEa,OAAQX,EAAEqB,cAAczC,S,EAGzC0C,gBAAkB,WACjB,MAA6B,EAAK3B,MAA1BgB,EAAR,EAAQA,OAAQ7C,EAAhB,EAAgBA,SACVyD,EAAmBZ,EAAOa,cAEhC,OAAO1D,EAAS6C,QAAO,SAACO,GAAD,OACrBA,EAAQ7C,KAAKmD,cAAcC,SAASF,O,EAIxCG,cAAgB,SAACC,GACZ,EAAK7B,UAAS,kBAAmB,CAClChC,SADe,EAAGA,SACC6C,QAAO,SAACO,GAAD,OAAaA,EAAQ9C,KAAOuD,U,uDAI1D,WACE,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAEnDJ,GACFvB,KAAKP,SAAS,CAAEhC,SAAU8D,M,gCAI9B,SAAmBK,EAAWC,GAExB7B,KAAKV,MAAM7B,WAAaoE,EAAUpE,UAEpCiE,aAAaI,QAAQ,WAAYN,KAAKO,UAAU/B,KAAKV,MAAM7B,a,oBAI/D,WACE,IAAQ6C,EAAWN,KAAKV,MAAhBgB,OAER,OACI,gCACE,cAAC,EAAD,CAAS1B,MAAM,YAAf,SACI,cAAC,EAAD,CAAakB,SAAUE,KAAKO,eAEhC,eAAC,EAAD,CAAS3B,MAAM,WAAf,UACE,cAAC,EAAD,CAAQL,MAAO+B,EAAQ9B,SAAUwB,KAAKe,eACtC,cAAC,EAAD,CACEtD,SAAUuC,KAAKiB,kBACfvD,gBAAiBsC,KAAKqB,0B,GA7ElBjB,aCIH4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA1E,EAAOC,QAAU,CAAC,KAAO,6B","file":"static/js/main.3ad3941f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3FCT8\",\"input\":\"Filter_input__3Ekrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Section_text__1LYPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__20QGP\",\"label\":\"ContactForm_label__3heZY\",\"button\":\"ContactForm_button__KaOWx\"};","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './ContactList.module.css';\r\n\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({id,name,number})=> (\r\n                    <li key={id} className={styles.item}>\r\n                    <p>{name}: {number}</p>\r\n                    <button className={styles.button} type=\"button\"\r\n                    onClick={() => onDeleteContact(id)}>Delete</button>\r\n                    </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n        .isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n        className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Section.module.css';\r\n\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2 className={styles.text}>{title}\r\n            </h2>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nSection.protoTypes = {\r\n    title:PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section;","import React, { Component } from \"react\";\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n            <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ContactForm;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Section from \"./components/Section/Section\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\n\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  \n  addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const { contacts } = this.state;\n    const includesContact = contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    includesContact\n      ? alert(`${includesContact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [...contacts,newContact],\n        }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n   visibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n   };\n  \n  deleteContact = (contactId) => {\n       this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log('componentDidUpdate');\n    if (this.state.contacts !== prevState.contacts) {\n      // console.log('Update field contacts');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n        <div>\n          <Section title=\"Phonebook\">\n              <ContactForm onSubmit={this.addContact} />\n          </Section>\n          <Section title=\"Contacts\">\n            <Filter value={filter} onChange={this.changeFilter} />\n            <ContactList\n              contacts={this.visibleContacts()}\n              onDeleteContact={this.deleteContact}\n          />\n          </Section>\n        </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__m_9V7\"};"],"sourceRoot":""}